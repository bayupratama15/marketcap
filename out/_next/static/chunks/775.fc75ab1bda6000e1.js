"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[775],{1775:function(e,t,n){n.r(t),n.d(t,{OpenloginAdapter:function(){return W},getOpenloginDefaultOptions:function(){return _}});var i=n(8648),r=n(4942),o=(n(88473),n(15048),n(17187));n(4445),n(79826),n(12840),n(30778),n(74286);function a(e,t,n){try{Reflect.apply(e,t,n)}catch(i){setTimeout((()=>{throw i}))}}class c extends o.EventEmitter{emit(e){let t="error"===e;const n=this._events;if(void 0!==n)t=t&&void 0===n.error;else if(!t)return!1;for(var i=arguments.length,r=new Array(i>1?i-1:0),o=1;o<i;o++)r[o-1]=arguments[o];if(t){let e;if(r.length>0&&([e]=r),e instanceof Error)throw e;const t=new Error("Unhandled error.".concat(e?" (".concat(e.message,")"):""));throw t.context=e,t}const c=n[e];if(void 0===c)return!1;if("function"===typeof c)a(c,this,r);else{const e=c.length,t=function(e){const t=e.length,n=new Array(t);for(let i=0;i<t;i+=1)n[i]=e[i];return n}(c);for(let n=0;n<e;n+=1)a(t[n],this,r)}return!0}}Error;Symbol("IGNORE_SUBSTREAM");var s=n(13631),l=n(2043),h=n.n(l);function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const u={EIP155:"eip155",SOLANA:"solana"},g=d(d({},u),{},{MULTICHAIN:"multichain"}),m="776218ac4734478c90191dde8cae483c",f=(e,t)=>{const n=t?"number"===typeof t?t:parseInt(t,16):(e=>{if(e===u.EIP155)return 1;if(e===u.SOLANA)return 1;throw new Error("Chain namespace ".concat(e," is not supported"))})(e);return e===u.EIP155?(e=>{const t=u.EIP155;return 1===e?{chainNamespace:t,chainId:"0x1",rpcTarget:"https://mainnet.infura.io/v3/".concat(m),displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===e?{chainNamespace:t,chainId:"0x3",rpcTarget:"https://ropsten.infura.io/v3/".concat(m),displayName:"ropsten",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===e?{chainNamespace:t,chainId:"0x4",rpcTarget:"https://rinkeby.infura.io/v3/".concat(m),displayName:"rinkeby",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===e?{chainNamespace:t,chainId:"0x5",rpcTarget:"https://goerli.infura.io/v3/".concat(m),displayName:"goerli",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:42===e?{chainNamespace:t,chainId:"0x2a",rpcTarget:"https://kovan.infura.io/v3/".concat(m),displayName:"kovan",blockExplorer:"https://kovan.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===e?{chainNamespace:t,rpcTarget:"https://polygon-rpc.com",blockExplorer:"https://polygonscan.com",chainId:"0x89",displayName:"Polygon Mainnet",ticker:"matic",tickerName:"matic"}:80001===e?{chainNamespace:t,rpcTarget:"https://rpc-mumbai.maticvigil.com",blockExplorer:"https://mumbai-explorer.matic.today",chainId:"0x13881",displayName:"Polygon Mumbai Testnet",ticker:"matic",tickerName:"matic"}:56===e?{chainNamespace:t,rpcTarget:"https://bsc-dataseed.binance.org",blockExplorer:"https://bscscan.com",chainId:"0x38",displayName:"Binance SmartChain Mainnet",ticker:"BNB",tickerName:"BNB"}:97===e?{chainNamespace:t,rpcTarget:"https://data-seed-prebsc-2-s3.binance.org:8545",blockExplorer:"https://testnet.bscscan.com",chainId:"0x61",displayName:"Binance SmartChain Testnet",ticker:"BNB",tickerName:"BNB"}:null})(n):e===u.SOLANA?(e=>{const t=u.SOLANA;return 1===e?{chainNamespace:t,blockExplorer:"https://explorer.solana.com",chainId:"0x1",displayName:"Solana Mainnet",rpcTarget:"https://api.mainnet-beta.solana.com",ticker:"SOL",tickerName:"Solana Token"}:2===e?{rpcTarget:"https://api.testnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=testnet",chainId:"0x2",chainNamespace:t,displayName:"testnet",ticker:"SOL",tickerName:"solana"}:3===e?{rpcTarget:"https://api.devnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=devnet",chainId:"0x3",chainNamespace:t,displayName:"devnet",ticker:"SOL",tickerName:"solana"}:null})(n):null};class N extends s.s{constructor(e,t){super(t),(0,r.Z)(this,"code",void 0),(0,r.Z)(this,"message",void 0),this.code=e,this.message=t||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class v extends N{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new v(e,"".concat(v.messages[e],", ").concat(t))}static notFound(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5001,e)}static notInstalled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5002,e)}static notReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5003,e)}static windowBlocked(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5004,e)}static windowClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5005,e)}static incompatibleChainNameSpace(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5006,e)}static duplicateAdapterError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5007,e)}static invalidProviderConfigError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5008,e)}static providerNotReadyError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5009,e)}static rpcConnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5010,e)}static invalidParams(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5011,e)}static invalidNetwork(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return v.fromCode(5013,e)}}(0,r.Z)(v,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class O extends N{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new O(e,"".concat(O.messages[e]).concat(t))}static connectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return O.fromCode(5111,e)}static disconnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return O.fromCode(5112,e)}static notConnectedError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return O.fromCode(5113,e)}static popupClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return O.fromCode(5114,e)}}function E(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function y(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}(0,r.Z)(O,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const C={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},b=y({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom"},C),w=y({TORUS_EVM:"torus-evm",METAMASK:"metamask"},C),P=y(y({},w),b);function I(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?I(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):I(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const T="in_app",A={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},D=k(k({},A),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class S extends c{constructor(){super(...arguments),(0,r.Z)(this,"adapterData",{}),(0,r.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?k({},this.chainConfig):null}setChainConfig(e){if(this.status===A.READY)return;if(!e.chainNamespace)throw v.notReady("ChainNamespace is required while setting chainConfig");const t=f(e.chainNamespace,e.chainId);this.chainConfig=k(k({},t),e)}setAdapterSettings(e){}checkConnectionRequirements(){if(this.name!==P.WALLET_CONNECT_V1||this.status!==A.CONNECTING){if(this.status===A.CONNECTING)throw v.notReady("Already connecting");if(this.status===A.CONNECTED)throw O.connectionError("Already connected");if(this.status!==A.READY)throw O.connectionError("Wallet adapter is not ready yet")}}checkInitializationRequirements(){if(this.status!==A.NOT_READY){if(this.status===A.CONNECTED)throw v.notReady("Already connected");if(this.status===A.READY)throw v.notReady("Adapter is already initialized")}}updateAdapterData(e){this.adapterData=e,this.emit(D.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:e})}}var j=h().getLogger("web3auth-logger");var R=n(72378),x=n.n(R);const _=(e,t)=>({adapterSettings:{network:i.dr.MAINNET,clientId:"",uxMode:i.$e.POPUP},chainConfig:e?f(e,t):void 0,loginSettings:{relogin:!0}});function L(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function Z(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?L(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):L(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}class W extends S{constructor(e){var t,n,o;super(),(0,r.Z)(this,"name",P.OPENLOGIN),(0,r.Z)(this,"adapterNamespace",g.MULTICHAIN),(0,r.Z)(this,"type",T),(0,r.Z)(this,"openloginInstance",null),(0,r.Z)(this,"status",A.NOT_READY),(0,r.Z)(this,"currentChainNamespace",u.EIP155),(0,r.Z)(this,"openloginOptions",void 0),(0,r.Z)(this,"loginSettings",{}),(0,r.Z)(this,"privKeyProvider",null),j.debug("const openlogin adapter",e);const a=_(null===(t=e.chainConfig)||void 0===t?void 0:t.chainNamespace,null===(n=e.chainConfig)||void 0===n?void 0:n.chainId);if(this.openloginOptions=Z(Z({clientId:"",network:i.dr.MAINNET},a.adapterSettings),e.adapterSettings||{}),this.loginSettings=Z(Z({},a.loginSettings),e.loginSettings),null!==(o=e.chainConfig)&&void 0!==o&&o.chainNamespace){var c;this.currentChainNamespace=null===(c=e.chainConfig)||void 0===c?void 0:c.chainNamespace;const t=a.chainConfig?a.chainConfig:{};if(this.chainConfig=Z(Z({},t),null===e||void 0===e?void 0:e.chainConfig),j.debug("const openlogin chainConfig",this.chainConfig),!this.chainConfig.rpcTarget)throw v.invalidParams("rpcTarget is required in chainConfig")}}get chainConfigProxy(){return this.chainConfig?Z({},this.chainConfig):null}get provider(){var e;return(null===(e=this.privKeyProvider)||void 0===e?void 0:e.provider)||null}set provider(e){throw new Error("Not implemented")}async init(e){var t;if(super.checkInitializationRequirements(),null===(t=this.openloginOptions)||void 0===t||!t.clientId)throw v.invalidParams("clientId is required before openlogin's initialization");if(!this.chainConfig)throw v.invalidParams("chainConfig is required before initialization");this.openloginInstance=new i.ZP(this.openloginOptions);const n=(0,i.Gv)();let r=!0;Object.keys(n).length>0&&n.result&&(r=!0),await this.openloginInstance.init(),this.status=A.READY,this.emit(D.READY,P.OPENLOGIN);try{this.openloginInstance.privKey&&(e.autoConnect||r)&&await this.connect()}catch(o){j.error("Failed to connect with cached openlogin provider",o),this.emit("ERRORED",o)}}async connect(e){super.checkConnectionRequirements(),this.status=A.CONNECTING,this.emit(D.CONNECTING,Z(Z({},e),{},{adapter:P.OPENLOGIN}));try{return await this.connectWithProvider(e),this.provider}catch(t){if(j.error("Failed to connect with openlogin provider",t),this.status=A.READY,this.emit(D.ERRORED,t),null!==t&&void 0!==t&&t.message.includes("user closed popup"))throw O.popupClosed();throw O.connectionError("Failed to login with openlogin")}}async disconnect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==A.CONNECTED)throw O.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw v.notReady("openloginInstance is not ready");await this.openloginInstance.logout(),e.cleanup?(this.status=A.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=A.READY,this.emit(D.DISCONNECTED)}async getUserInfo(){if(this.status!==A.CONNECTED)throw O.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw v.notReady("openloginInstance is not ready");return await this.openloginInstance.getUserInfo()}setAdapterSettings(e){if(this.status===A.READY)return;const t=_();this.openloginOptions=Z(Z(Z({},t.adapterSettings),this.openloginOptions||{}),e)}setChainConfig(e){super.setChainConfig(e),this.currentChainNamespace=e.chainNamespace}async connectWithProvider(e){if(!this.chainConfig)throw v.invalidParams("chainConfig is required before initialization");if(!this.openloginInstance)throw v.notReady("openloginInstance is not ready");if(this.currentChainNamespace===u.SOLANA){const{SolanaPrivateKeyProvider:e}=await Promise.all([n.e(662),n.e(766),n.e(351),n.e(108),n.e(713),n.e(511)]).then(n.bind(n,83247));this.privKeyProvider=new e({config:{chainConfig:this.chainConfig}})}else{if(this.currentChainNamespace!==u.EIP155)throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));{const{EthereumPrivateKeyProvider:e}=await Promise.all([n.e(662),n.e(482),n.e(351),n.e(93),n.e(628)]).then(n.bind(n,2093));this.privKeyProvider=new e({config:{chainConfig:this.chainConfig}})}}!this.openloginInstance.privKey&&e&&await this.openloginInstance.login(x()(this.loginSettings,{loginProvider:e.loginProvider},{extraLoginOptions:{login_hint:null===e||void 0===e?void 0:e.login_hint}}));let t=this.openloginInstance.privKey;if(t){if(this.currentChainNamespace===u.SOLANA){const{getED25519Key:e}=await Promise.all([n.e(108),n.e(418)]).then(n.bind(n,33946));t=e(t).sk.toString("hex")}await this.privKeyProvider.setupProvider(t),this.status=A.CONNECTED,this.emit(D.CONNECTED,{adapter:P.OPENLOGIN,reconnected:!e})}}}}}]);